rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection - admins can read/write all, users can only read their own
    match /users/{userId} {
      allow read, write: if isAdmin();
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Products collection - admins have full access, others can only read
    match /products/{productId} {
      allow read: if true; // Anyone can read products
      allow write: if isAdmin(); // Only admins can write
    }
    
    // Reviews collection - admins have full access, others can only read
    match /reviews/{reviewId} {
      allow read: if true; // Anyone can read reviews
      allow write: if isAdmin(); // Only admins can write
    }
    
    // Orders collection - admins have full access, users can only read their own
    match /orders/{orderId} {
      allow read, write: if isAdmin();
      allow read: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
    }
    
    // Settings collection - only admins can access
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }
    
    // Analytics collection - only admins can access
    match /analytics/{analyticsId} {
      allow read, write: if isAdmin();
    }
    
    // Default rule - deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 